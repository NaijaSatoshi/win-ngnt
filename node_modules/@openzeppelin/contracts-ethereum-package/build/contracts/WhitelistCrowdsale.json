{
  "contractName": "WhitelistCrowdsale",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminRemoved\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Crowdsale in which only whitelisted users can contribute.\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"initialize(uint256,address,address)\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"rate\":\"Number of token units a buyer gets per wei\",\"token\":\"Address of the token being sold\",\"wallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"token()\":{\"return\":\"the token being sold.\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}},\"title\":\"WhitelistCrowdsale\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol\":\"WhitelistCrowdsale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzzr://5cddbf3b74b775a8670757a6b8e108dac17dac20253f35f4c729e9cb6bea4ed3\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/WhitelistAdminRole.sol\":{\"keccak256\":\"0xaff92f966b8a16835deab14a3d8e846fa97e50f41ee81b4778692bd9d92ff996\",\"urls\":[\"bzzr://b9a574d7fa826f277092a49173e44251a57d99149fb0b982abfe784bc54b1c9e\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/WhitelistedRole.sol\":{\"keccak256\":\"0xde63dce8b9f52e86c19ffae21d5c5cc679ce95c1eb5f41591eb29300703f3081\",\"urls\":[\"bzzr://8a0ee958a3e01042b9206cadeb0367e64d9dad18cb3d3d7512a7a9d2bd7e94a6\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x8efbd4e37c7c7739d0b353ce35b4d178404301a078ab26e652db2451ac969c1d\",\"urls\":[\"bzzr://d280a2b341bb48d706cd6c39af74fb126161123fa9a96f23d6b6f31bdb84bd83\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol\":{\"keccak256\":\"0xb897c80d97e8c0abee8635118076d5519403346dde572a1700a2b1d66fbf2789\",\"urls\":[\"bzzr://76faf6ffec9a509feeffb2c1b4d78bfe23dbccc269be7377024f49cf4aeddcc8\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzzr://d2ff5aadcb697bc27ca3b0f6c40b4998e8cf0a1bd0f761d1df6d5981777841ae\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzzr://cd04ca8d050befdf06ac93c2f6f5ea7250d2199b44aecbe54ded512e823f711a\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzzr://f4adaaa64056a7d506da29775eaa7cc3405969e07c77786448aeffdacb48504b\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x6080604052611d49806100136000396000f3fe6080604052600436106100e85760003560e01c80637362d9c81161008a578063c4d66de811610059578063c4d66de814610415578063d6cd947314610466578063ec8ac4d81461047d578063fc0c546a146104c1576100e8565b80637362d9c8146102c95780638129fc1c1461031a578063b4988fd014610331578063bb5f747b146103ac576100e8565b80633af32abf116100c65780633af32abf146101c75780634042b66f146102305780634c5a628c1461025b578063521eb27314610272576100e8565b806310154bad146100fa578063291d95491461014b5780632c4e722e1461019c575b6100f86100f3610518565b610520565b005b34801561010657600080fd5b506101496004803603602081101561011d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610686565b005b34801561015757600080fd5b5061019a6004803603602081101561016e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f7565b005b3480156101a857600080fd5b506101b1610768565b6040518082815260200191505060405180910390f35b3480156101d357600080fd5b50610216600480360360208110156101ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610772565b604051808215151515815260200191505060405180910390f35b34801561023c57600080fd5b5061024561078f565b6040518082815260200191505060405180910390f35b34801561026757600080fd5b50610270610799565b005b34801561027e57600080fd5b506102876107ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d557600080fd5b50610318600480360360208110156102ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d5565b005b34801561032657600080fd5b5061032f610846565b005b34801561033d57600080fd5b506103aa6004803603606081101561035457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094d565b005b3480156103b857600080fd5b506103fb600480360360208110156103cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c5a565b604051808215151515815260200191505060405180910390f35b34801561042157600080fd5b506104646004803603602081101561043857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c77565b005b34801561047257600080fd5b5061047b610d8e565b005b6104bf6004803603602081101561049357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610520565b005b3480156104cd57600080fd5b506104d6610da0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b60016099600082825401925050819055506000609954905060003490506105478382610dca565b600061055282610e36565b90506105698260cf54610e5490919063ffffffff16565b60cf819055506105798482610edc565b8373ffffffffffffffffffffffffffffffffffffffff16610598610518565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105f78483610eea565b6105ff610eee565b6106098483610f59565b50506099548114610682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b610696610691610518565b610c5a565b6106eb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526040815260200180611c656040913960400191505060405180910390fd5b6106f481610f5d565b50565b610707610702610518565b610c5a565b61075c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526040815260200180611c656040913960400191505060405180910390fd5b61076581610fb7565b50565b600060ce54905090565b600061078882606661101190919063ffffffff16565b9050919050565b600060cf54905090565b6107a96107a4610518565b6110ef565b565b600060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107e56107e0610518565b610c5a565b61083a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526040815260200180611c656040913960400191505060405180910390fd5b61084381611149565b50565b600060019054906101000a900460ff168061086557506108646111a3565b5b8061087c57506000809054906101000a900460ff16155b6108d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610921576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001609981905550801561094a5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061096c575061096b6111a3565b5b8061098357506000809054906101000a900460ff16155b6109d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610a28576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60008411610a9e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776473616c653a2072617465206973203000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611cf96025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611baf6024913960400191505060405180910390fd5b8360ce819055508260cd60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610c545760008060016101000a81548160ff0219169083151502179055505b50505050565b6000610c7082603361101190919063ffffffff16565b9050919050565b600060019054906101000a900460ff1680610c965750610c956111a3565b5b80610cad57506000809054906101000a900460ff16155b610d02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610d52576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610d5b826111b4565b610d636112bd565b610d6957fe5b8015610d8a5760008060016101000a81548160ff0219169083151502179055505b5050565b610d9e610d99610518565b610fb7565b565b600060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610dd382610772565b610e28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526041815260200180611b6e6041913960600191505060405180910390fd5b610e32828261137f565b5050565b6000610e4d60ce548361148090919063ffffffff16565b9050919050565b600080828401905083811015610ed2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610ee68282611506565b5050565b5050565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f56573d6000803e3d6000fd5b50565b5050565b610f7181606661155790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b610fcb81606661163290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611098576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611c156022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61110381603361163290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b61115d81603361155790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b600080303b90506000811491505090565b600060019054906101000a900460ff16806111d357506111d26111a3565b5b806111ea57506000809054906101000a900460ff16155b61123f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561128f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611298826116ef565b80156112b95760008060016101000a81548160ff0219169083151502179055505b5050565b60008060ce5411801561131f5750600073ffffffffffffffffffffffffffffffffffffffff1660cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b801561137a5750600073ffffffffffffffffffffffffffffffffffffffff1660cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611ca5602a913960400191505060405180910390fd5b600081141561147c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b5050565b6000808314156114935760009050611500565b60008284029050828482816114a457fe5b04146114fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bf46021913960400191505060405180910390fd5b809150505b92915050565b611553828260cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118069092919063ffffffff16565b5050565b6115618282611011565b156115d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61163c8282611011565b611691576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bd36021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff168061170e575061170d6111a3565b5b8061172557506000809054906101000a900460ff16155b61177a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156117ca576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6117d382610c5a565b6117e1576117e082611149565b5b80156118025760008060016101000a81548160ff0219169083151502179055505b5050565b6118d2838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118d7565b505050565b6118f68273ffffffffffffffffffffffffffffffffffffffff16611b22565b611968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106119b75780518252602082019150602081019050602083039250611994565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611a19576040519150601f19603f3d011682016040523d82523d6000602084013e611a1e565b606091505b509150915081611a96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115611b1c57808060200190516020811015611ab557600080fd5b8101908080519060200190929190505050611b1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611ccf602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015611b645750808214155b9250505091905056fe57686974656c69737443726f776473616c653a2062656e656669636961727920646f65736e27742068617665207468652057686974656c697374656420726f6c6543726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656457686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c6543726f776473616c653a2062656e656669636961727920697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656443726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373a165627a7a723058201d46a42b0dd15afb249dd7086ebff8d81b79b516f1f7b73165cbb91ef305d56c0029",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80637362d9c81161008a578063c4d66de811610059578063c4d66de814610415578063d6cd947314610466578063ec8ac4d81461047d578063fc0c546a146104c1576100e8565b80637362d9c8146102c95780638129fc1c1461031a578063b4988fd014610331578063bb5f747b146103ac576100e8565b80633af32abf116100c65780633af32abf146101c75780634042b66f146102305780634c5a628c1461025b578063521eb27314610272576100e8565b806310154bad146100fa578063291d95491461014b5780632c4e722e1461019c575b6100f86100f3610518565b610520565b005b34801561010657600080fd5b506101496004803603602081101561011d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610686565b005b34801561015757600080fd5b5061019a6004803603602081101561016e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f7565b005b3480156101a857600080fd5b506101b1610768565b6040518082815260200191505060405180910390f35b3480156101d357600080fd5b50610216600480360360208110156101ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610772565b604051808215151515815260200191505060405180910390f35b34801561023c57600080fd5b5061024561078f565b6040518082815260200191505060405180910390f35b34801561026757600080fd5b50610270610799565b005b34801561027e57600080fd5b506102876107ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102d557600080fd5b50610318600480360360208110156102ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d5565b005b34801561032657600080fd5b5061032f610846565b005b34801561033d57600080fd5b506103aa6004803603606081101561035457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094d565b005b3480156103b857600080fd5b506103fb600480360360208110156103cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c5a565b604051808215151515815260200191505060405180910390f35b34801561042157600080fd5b506104646004803603602081101561043857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c77565b005b34801561047257600080fd5b5061047b610d8e565b005b6104bf6004803603602081101561049357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610520565b005b3480156104cd57600080fd5b506104d6610da0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b60016099600082825401925050819055506000609954905060003490506105478382610dca565b600061055282610e36565b90506105698260cf54610e5490919063ffffffff16565b60cf819055506105798482610edc565b8373ffffffffffffffffffffffffffffffffffffffff16610598610518565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105f78483610eea565b6105ff610eee565b6106098483610f59565b50506099548114610682576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b610696610691610518565b610c5a565b6106eb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526040815260200180611c656040913960400191505060405180910390fd5b6106f481610f5d565b50565b610707610702610518565b610c5a565b61075c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526040815260200180611c656040913960400191505060405180910390fd5b61076581610fb7565b50565b600060ce54905090565b600061078882606661101190919063ffffffff16565b9050919050565b600060cf54905090565b6107a96107a4610518565b6110ef565b565b600060cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107e56107e0610518565b610c5a565b61083a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526040815260200180611c656040913960400191505060405180910390fd5b61084381611149565b50565b600060019054906101000a900460ff168061086557506108646111a3565b5b8061087c57506000809054906101000a900460ff16155b6108d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610921576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001609981905550801561094a5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061096c575061096b6111a3565b5b8061098357506000809054906101000a900460ff16155b6109d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610a28576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60008411610a9e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776473616c653a2072617465206973203000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611cf96025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611baf6024913960400191505060405180910390fd5b8360ce819055508260cd60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610c545760008060016101000a81548160ff0219169083151502179055505b50505050565b6000610c7082603361101190919063ffffffff16565b9050919050565b600060019054906101000a900460ff1680610c965750610c956111a3565b5b80610cad57506000809054906101000a900460ff16155b610d02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610d52576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610d5b826111b4565b610d636112bd565b610d6957fe5b8015610d8a5760008060016101000a81548160ff0219169083151502179055505b5050565b610d9e610d99610518565b610fb7565b565b600060cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610dd382610772565b610e28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526041815260200180611b6e6041913960600191505060405180910390fd5b610e32828261137f565b5050565b6000610e4d60ce548361148090919063ffffffff16565b9050919050565b600080828401905083811015610ed2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610ee68282611506565b5050565b5050565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f56573d6000803e3d6000fd5b50565b5050565b610f7181606661155790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b610fcb81606661163290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611098576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611c156022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61110381603361163290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b61115d81603361155790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b600080303b90506000811491505090565b600060019054906101000a900460ff16806111d357506111d26111a3565b5b806111ea57506000809054906101000a900460ff16155b61123f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561128f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611298826116ef565b80156112b95760008060016101000a81548160ff0219169083151502179055505b5050565b60008060ce5411801561131f5750600073ffffffffffffffffffffffffffffffffffffffff1660cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b801561137a5750600073ffffffffffffffffffffffffffffffffffffffff1660cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611ca5602a913960400191505060405180910390fd5b600081141561147c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b5050565b6000808314156114935760009050611500565b60008284029050828482816114a457fe5b04146114fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bf46021913960400191505060405180910390fd5b809150505b92915050565b611553828260cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118069092919063ffffffff16565b5050565b6115618282611011565b156115d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61163c8282611011565b611691576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bd36021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff168061170e575061170d6111a3565b5b8061172557506000809054906101000a900460ff16155b61177a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611c37602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156117ca576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6117d382610c5a565b6117e1576117e082611149565b5b80156118025760008060016101000a81548160ff0219169083151502179055505b5050565b6118d2838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118d7565b505050565b6118f68273ffffffffffffffffffffffffffffffffffffffff16611b22565b611968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106119b75780518252602082019150602081019050602083039250611994565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611a19576040519150601f19603f3d011682016040523d82523d6000602084013e611a1e565b606091505b509150915081611a96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115611b1c57808060200190516020811015611ab557600080fd5b8101908080519060200190929190505050611b1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611ccf602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015611b645750808214155b9250505091905056fe57686974656c69737443726f776473616c653a2062656e656669636961727920646f65736e27742068617665207468652057686974656c697374656420726f6c6543726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656457686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c6543726f776473616c653a2062656e656669636961727920697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656443726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373a165627a7a723058201d46a42b0dd15afb249dd7086ebff8d81b79b516f1f7b73165cbb91ef305d56c0029",
  "sourceMap": "205:820:25:-;;;;;;;;;",
  "deployedSourceMap": "205:820:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3113:23:13;3123:12;:10;:12::i;:::-;3113:9;:23::i;:::-;205:820:25;1145:108:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1145:108:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1145:108:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1259:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1259:114:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1259:114:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;3526:75:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3526:75:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1022:117:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1022:117:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1022:117:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3664:85:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3664:85:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1098:93:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1098:93:11;;;:::i;:::-;;3354:87:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3354:87:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;978:114:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;978:114:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;978:114:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;769:214:158;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:158;;;:::i;:::-;;2396:389:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2396:389:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2396:389:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;849:123:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;849:123:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;849:123:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;284:156:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:156:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;284:156:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;1379:87:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1379:87:12;;;:::i;:::-;;4006:605:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4006:605:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;3202:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3202:76:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;867:96:0;912:15;946:10;939:17;;867:96;:::o;4006:605:13:-;1409:1:158;1392:13;;:18;;;;;;;;;;;1420:20;1443:13;;1420:36;;4084:17:13;4104:9;4084:29;;4123:44;4144:11;4157:9;4123:20;:44::i;:::-;4226:14;4243:26;4259:9;4243:15;:26::i;:::-;4226:43;;4317:25;4332:9;4317:10;;:14;;:25;;;;:::i;:::-;4304:10;:38;;;;4353:37;4370:11;4383:6;4353:16;:37::i;:::-;4435:11;4405:61;;4421:12;:10;:12::i;:::-;4405:61;;;4448:9;4459:6;4405:61;;;;;;;;;;;;;;;;;;;;;;;;4477:46;4500:11;4513:9;4477:22;:46::i;:::-;4534:15;:13;:15::i;:::-;4559:45;4581:11;4594:9;4559:21;:45::i;:::-;1466:1:158;;1501:13;;1485:12;:29;1477:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4006:605:13;;:::o;1145:108:12:-;726:30:11;743:12;:10;:12::i;:::-;726:16;:30::i;:::-;718:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:24:12;1238:7;1222:15;:24::i;:::-;1145:108;:::o;1259:114::-;726:30:11;743:12;:10;:12::i;:::-;726:16;:30::i;:::-;718:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:27:12;1358:7;1339:18;:27::i;:::-;1259:114;:::o;3526:75:13:-;3563:7;3589:5;;3582:12;;3526:75;:::o;1022:117:12:-;1083:4;1106:26;1124:7;1106:13;:17;;:26;;;;:::i;:::-;1099:33;;1022:117;;;:::o;3664:85:13:-;3706:7;3732:10;;3725:17;;3664:85;:::o;1098:93:11:-;1149:35;1171:12;:10;:12::i;:::-;1149:21;:35::i;:::-;1098:93::o;3354:87:13:-;3393:15;3427:7;;;;;;;;;;;3420:14;;3354:87;:::o;978:114:11:-;726:30;743:12;:10;:12::i;:::-;726:16;:30::i;:::-;718:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:27;1077:7;1058:18;:27::i;:::-;978:114;:::o;769:214:158:-;1024:12:159;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;975:1:158;959:13;:17;;;;1268:14:159;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;769:214:158;:::o;2396:389:13:-;1024:12:159;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2512:1:13;2505:4;:8;2497:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:1;2556:20;;:6;:20;;;;2548:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2662:1;2636:28;;2644:5;2636:28;;;;2628:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2724:4;2716:5;:12;;;;2748:6;2738:7;;:16;;;;;;;;;;;;;;;;;;2773:5;2764:6;;:14;;;;;;;;;;;;;;;;;;1268::159;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2396:389:13;;;;:::o;849:123:11:-;913:4;936:29;957:7;936:16;:20;;:29;;;;:::i;:::-;929:36;;849:123;;;:::o;284:156:25:-;1024:12:159;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;349:34:25;376:6;349:26;:34::i;:::-;401:31;:29;:31::i;:::-;394:39;;;;1268:14:159;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;284:156:25;;:::o;1379:87:12:-;1427:32;1446:12;:10;:12::i;:::-;1427:18;:32::i;:::-;1379:87::o;3202:76:13:-;3240:6;3265;;;;;;;;;;;3258:13;;3202:76;:::o;717:270:25:-;821:27;835:12;821:13;:27::i;:::-;813:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:52;955:12;969:10;928:26;:52::i;:::-;717:270;;:::o;7619:120:13:-;7686:7;7712:20;7726:5;;7712:9;:13;;:20;;;;:::i;:::-;7705:27;;7619:120;;;:::o;834:176:45:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6821:134:13:-;6908:40;6923:11;6936;6908:14;:40::i;:::-;6821:134;;:::o;7225:145::-;;;:::o;7826:78::-;7870:7;;;;;;;;;;;:16;;:27;7887:9;7870:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7870:27:13;7826:78::o;5989:149::-;;;:::o;1472:134:12:-;1533:26;1551:7;1533:13;:17;;:26;;;;:::i;:::-;1591:7;1574:25;;;;;;;;;;;;1472:134;:::o;1612:142::-;1676:29;1697:7;1676:13;:20;;:29;;;;:::i;:::-;1739:7;1720:27;;;;;;;;;;;;1612:142;:::o;779:200:6:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;1346:151:11:-;1413:32;1437:7;1413:16;:23;;:32;;;;:::i;:::-;1482:7;1460:30;;;;;;;;;;;;1346:151;:::o;1197:143::-;1261:29;1282:7;1261:16;:20;;:29;;;;:::i;:::-;1325:7;1305:28;;;;;;;;;;;;1197:143;:::o;1409:467:159:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;907:109:12:-;1024:12:159;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;972:37:12;1002:6;972:29;:37::i;:::-;1268:14:159;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;907:109:12;;:::o;4617:159:13:-;4671:4;4704:1;4696:5;;:9;4695:38;;;;;4730:1;4711:21;;:7;;;;;;;;;;;:21;;;;4695:38;:73;;;;;4765:1;4738:29;;4746:6;;;;;;;;;;;4738:29;;;;4695:73;4687:82;;4617:159;:::o;5318:376::-;5443:1;5420:25;;:11;:25;;;;5412:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5523:1;5510:9;:14;;5502:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5318:376;;:::o;2159:459:45:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;6418:137:13:-;6503:45;6523:11;6536;6503:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6418:137;;:::o;260:175:6:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;519:153:11:-;1024:12:159;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;589:24:11;606:6;589:16;:24::i;:::-;584:82;;629:26;648:6;629:18;:26::i;:::-;584:82;1268:14:159;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;519:153:11;;:::o;662:174:134:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:134;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:134;744:18;:85::i;:::-;662:174;;;:::o;2666:1095::-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:134;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:134;;;;3479:7;3471:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:1;3538:10;:17;:21;3534:221;;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3667:30:134;;;;;;;;;;;;;;;;3659:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:221;2666:1095;;;;:::o;557:797:156:-;617:4;1062:16;1088:19;1110:66;1088:88;;;;1277:7;1265:20;1253:32;;1316:3;1304:15;;:8;:15;;:42;;;;;1335:11;1323:8;:23;;1304:42;1296:51;;;;557:797;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport \"../Crowdsale.sol\";\nimport \"../../access/roles/WhitelistedRole.sol\";\n\n\n/**\n * @title WhitelistCrowdsale\n * @dev Crowdsale in which only whitelisted users can contribute.\n */\ncontract WhitelistCrowdsale is Initializable, WhitelistedRole, Crowdsale {\n    function initialize(address sender) public initializer {\n        WhitelistedRole.initialize(sender);\n\n        assert(Crowdsale._hasBeenInitialized());\n    }\n\n    /**\n     * @dev Extend parent behavior requiring beneficiary to be whitelisted. Note that no\n     * restriction is imposed on the account sending the transaction.\n     * @param _beneficiary Token beneficiary\n     * @param _weiAmount Amount of wei contributed\n     */\n    function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal view {\n        require(isWhitelisted(_beneficiary), \"WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role\");\n        super._preValidatePurchase(_beneficiary, _weiAmount);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
    "exportedSymbols": {
      "WhitelistCrowdsale": [
        3583
      ]
    },
    "id": 3584,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3528,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 3529,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 2337,
        "src": "24:26:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/WhitelistedRole.sol",
        "file": "../../access/roles/WhitelistedRole.sol",
        "id": 3530,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 2023,
        "src": "51:48:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3531,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15206,
              "src": "236:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$15206",
                "typeString": "contract Initializable"
              }
            },
            "id": 3532,
            "nodeType": "InheritanceSpecifier",
            "src": "236:13:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3533,
              "name": "WhitelistedRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2022,
              "src": "251:15:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedRole_$2022",
                "typeString": "contract WhitelistedRole"
              }
            },
            "id": 3534,
            "nodeType": "InheritanceSpecifier",
            "src": "251:15:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3535,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2336,
              "src": "268:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2336",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 3536,
            "nodeType": "InheritanceSpecifier",
            "src": "268:9:25"
          }
        ],
        "contractDependencies": [
          29,
          1888,
          2022,
          2336,
          15143,
          15206
        ],
        "contractKind": "contract",
        "documentation": "@title WhitelistCrowdsale\n@dev Crowdsale in which only whitelisted users can contribute.",
        "fullyImplemented": true,
        "id": 3583,
        "linearizedBaseContracts": [
          3583,
          2336,
          15143,
          2022,
          1888,
          29,
          15206
        ],
        "name": "WhitelistCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3555,
              "nodeType": "Block",
              "src": "339:101:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3546,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3538,
                        "src": "376:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3543,
                        "name": "WhitelistedRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "349:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WhitelistedRole_$2022_$",
                          "typeString": "type(contract WhitelistedRole)"
                        }
                      },
                      "id": 3545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1939,
                      "src": "349:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3548,
                  "nodeType": "ExpressionStatement",
                  "src": "349:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3550,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "401:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2336_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 3551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2237,
                          "src": "401:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "401:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3549,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15210,
                      "src": "394:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "394:39:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3554,
                  "nodeType": "ExpressionStatement",
                  "src": "394:39:25"
                }
              ]
            },
            "documentation": null,
            "id": 3556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3541,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3540,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15187,
                  "src": "327:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:11:25"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3538,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3556,
                  "src": "304:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:16:25"
            },
            "returnParameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:0:25"
            },
            "scope": 3583,
            "src": "284:156:25",
            "stateMutability": "nonpayable",
            "superFunction": 1939,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3577,
              "nodeType": "Block",
              "src": "803:184:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3565,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3558,
                            "src": "835:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3564,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1952,
                          "src": "821:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "821:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c69737443726f776473616c653a2062656e656669636961727920646f65736e27742068617665207468652057686974656c697374656420726f6c65",
                        "id": 3567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "850:67:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548",
                          "typeString": "literal_string \"WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role\""
                        },
                        "value": "WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548",
                          "typeString": "literal_string \"WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role\""
                        }
                      ],
                      "id": 3563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15224,
                        15225
                      ],
                      "referencedDeclaration": 15225,
                      "src": "813:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:105:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3569,
                  "nodeType": "ExpressionStatement",
                  "src": "813:105:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3573,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "955:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3574,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3560,
                        "src": "969:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3570,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15322,
                        "src": "928:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_WhitelistCrowdsale_$3583",
                          "typeString": "contract super WhitelistCrowdsale"
                        }
                      },
                      "id": 3572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2263,
                      "src": "928:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 3575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3576,
                  "nodeType": "ExpressionStatement",
                  "src": "928:52:25"
                }
              ]
            },
            "documentation": "@dev Extend parent behavior requiring beneficiary to be whitelisted. Note that no\nrestriction is imposed on the account sending the transaction.\n@param _beneficiary Token beneficiary\n@param _weiAmount Amount of wei contributed",
            "id": 3578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3558,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3578,
                  "src": "747:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3560,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3578,
                  "src": "769:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "746:42:25"
            },
            "returnParameters": {
              "id": 3562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:25"
            },
            "scope": 3583,
            "src": "717:270:25",
            "stateMutability": "view",
            "superFunction": 2263,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3582,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 3583,
            "src": "993:29:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3579,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "993:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3581,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3580,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1001:2:25",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "993:11:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3584,
        "src": "205:820:25"
      }
    ],
    "src": "0:1026:25"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
    "exportedSymbols": {
      "WhitelistCrowdsale": [
        3583
      ]
    },
    "id": 3584,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3528,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 3529,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 2337,
        "src": "24:26:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/WhitelistedRole.sol",
        "file": "../../access/roles/WhitelistedRole.sol",
        "id": 3530,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 2023,
        "src": "51:48:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3531,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15206,
              "src": "236:13:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$15206",
                "typeString": "contract Initializable"
              }
            },
            "id": 3532,
            "nodeType": "InheritanceSpecifier",
            "src": "236:13:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3533,
              "name": "WhitelistedRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2022,
              "src": "251:15:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedRole_$2022",
                "typeString": "contract WhitelistedRole"
              }
            },
            "id": 3534,
            "nodeType": "InheritanceSpecifier",
            "src": "251:15:25"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3535,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2336,
              "src": "268:9:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2336",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 3536,
            "nodeType": "InheritanceSpecifier",
            "src": "268:9:25"
          }
        ],
        "contractDependencies": [
          29,
          1888,
          2022,
          2336,
          15143,
          15206
        ],
        "contractKind": "contract",
        "documentation": "@title WhitelistCrowdsale\n@dev Crowdsale in which only whitelisted users can contribute.",
        "fullyImplemented": true,
        "id": 3583,
        "linearizedBaseContracts": [
          3583,
          2336,
          15143,
          2022,
          1888,
          29,
          15206
        ],
        "name": "WhitelistCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3555,
              "nodeType": "Block",
              "src": "339:101:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3546,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3538,
                        "src": "376:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3543,
                        "name": "WhitelistedRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "349:15:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WhitelistedRole_$2022_$",
                          "typeString": "type(contract WhitelistedRole)"
                        }
                      },
                      "id": 3545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1939,
                      "src": "349:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3548,
                  "nodeType": "ExpressionStatement",
                  "src": "349:34:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3550,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "401:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2336_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 3551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2237,
                          "src": "401:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "401:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3549,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15210,
                      "src": "394:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "394:39:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3554,
                  "nodeType": "ExpressionStatement",
                  "src": "394:39:25"
                }
              ]
            },
            "documentation": null,
            "id": 3556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3541,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3540,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15187,
                  "src": "327:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:11:25"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3538,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3556,
                  "src": "304:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:16:25"
            },
            "returnParameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:0:25"
            },
            "scope": 3583,
            "src": "284:156:25",
            "stateMutability": "nonpayable",
            "superFunction": 1939,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3577,
              "nodeType": "Block",
              "src": "803:184:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3565,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3558,
                            "src": "835:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3564,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1952,
                          "src": "821:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "821:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c69737443726f776473616c653a2062656e656669636961727920646f65736e27742068617665207468652057686974656c697374656420726f6c65",
                        "id": 3567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "850:67:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548",
                          "typeString": "literal_string \"WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role\""
                        },
                        "value": "WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548",
                          "typeString": "literal_string \"WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role\""
                        }
                      ],
                      "id": 3563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15224,
                        15225
                      ],
                      "referencedDeclaration": 15225,
                      "src": "813:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:105:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3569,
                  "nodeType": "ExpressionStatement",
                  "src": "813:105:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3573,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "955:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3574,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3560,
                        "src": "969:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3570,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15322,
                        "src": "928:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_WhitelistCrowdsale_$3583",
                          "typeString": "contract super WhitelistCrowdsale"
                        }
                      },
                      "id": 3572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2263,
                      "src": "928:26:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 3575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3576,
                  "nodeType": "ExpressionStatement",
                  "src": "928:52:25"
                }
              ]
            },
            "documentation": "@dev Extend parent behavior requiring beneficiary to be whitelisted. Note that no\nrestriction is imposed on the account sending the transaction.\n@param _beneficiary Token beneficiary\n@param _weiAmount Amount of wei contributed",
            "id": 3578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3558,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3578,
                  "src": "747:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3560,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3578,
                  "src": "769:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "746:42:25"
            },
            "returnParameters": {
              "id": 3562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:25"
            },
            "scope": 3583,
            "src": "717:270:25",
            "stateMutability": "view",
            "superFunction": 2263,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3582,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 3583,
            "src": "993:29:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 3579,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "993:7:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3581,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 3580,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1001:2:25",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "993:11:25",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3584,
        "src": "205:820:25"
      }
    ],
    "src": "0:1026:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-15T23:03:30.289Z",
  "devdoc": {
    "details": "Crowdsale in which only whitelisted users can contribute.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "initialize(uint256,address,address)": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "WhitelistCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}