{
  "contractName": "AllowanceCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenWallet",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenWallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "remainingTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenWallet\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"initialize(address)\":{\"details\":\"Constructor, takes token wallet address.\",\"params\":{\"tokenWallet\":\"Address holding the tokens, which has approved allowance to the crowdsale.\"}},\"initialize(uint256,address,address)\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"rate\":\"Number of token units a buyer gets per wei\",\"token\":\"Address of the token being sold\",\"wallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"remainingTokens()\":{\"details\":\"Checks the amount of tokens left in the allowance.\",\"return\":\"Amount of tokens left in the allowance\"},\"token()\":{\"return\":\"the token being sold.\"},\"tokenWallet()\":{\"return\":\"the address of the wallet that will hold the tokens.\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}},\"title\":\"AllowanceCrowdsale\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/emission/AllowanceCrowdsale.sol\":\"AllowanceCrowdsale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzzr://5cddbf3b74b775a8670757a6b8e108dac17dac20253f35f4c729e9cb6bea4ed3\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x8efbd4e37c7c7739d0b353ce35b4d178404301a078ab26e652db2451ac969c1d\",\"urls\":[\"bzzr://d280a2b341bb48d706cd6c39af74fb126161123fa9a96f23d6b6f31bdb84bd83\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/emission/AllowanceCrowdsale.sol\":{\"keccak256\":\"0x1db3ede24836118a07ac5229bb7c992d606d9942b196116361ebdf78fce2b9dd\",\"urls\":[\"bzzr://5a2df1a8be438d5220419fb3033d250f40ee70f9e990459c8ad5a366ac106523\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzzr://200d5728b32858918810d8d7a8db1406ee9b157ad5026f050e6d864a696b9080\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzzr://d2ff5aadcb697bc27ca3b0f6c40b4998e8cf0a1bd0f761d1df6d5981777841ae\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzzr://cd04ca8d050befdf06ac93c2f6f5ea7250d2199b44aecbe54ded512e823f711a\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzzr://f4adaaa64056a7d506da29775eaa7cc3405969e07c77786448aeffdacb48504b\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x608060405261161a806100136000396000f3fe6080604052600436106100915760003560e01c8063bf58390311610059578063bf583903146101e2578063bff99c6c1461020d578063c4d66de814610264578063ec8ac4d8146102b5578063fc0c546a146102f957610091565b80632c4e722e146100a35780634042b66f146100ce578063521eb273146100f95780638129fc1c14610150578063b4988fd014610167575b6100a161009c610350565b610358565b005b3480156100af57600080fd5b506100b86104be565b6040518082815260200191505060405180910390f35b3480156100da57600080fd5b506100e36104c8565b6040518082815260200191505060405180910390f35b34801561010557600080fd5b5061010e6104d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015c57600080fd5b506101656104fc565b005b34801561017357600080fd5b506101e06004803603606081101561018a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b005b3480156101ee57600080fd5b506101f7610910565b6040518082815260200191505060405180910390f35b34801561021957600080fd5b50610222610b15565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027057600080fd5b506102b36004803603602081101561028757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b3f565b005b6102f7600480360360208110156102cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610358565b005b34801561030557600080fd5b5061030e610d14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b600160336000828254019250508190555060006033549050600034905061037f8382610d3e565b600061038a82610e3f565b90506103a182606954610e5d90919063ffffffff16565b6069819055506103b18482610ee5565b8373ffffffffffffffffffffffffffffffffffffffff166103d0610350565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361042f8483610ef3565b610437610ef7565b6104418483610f62565b505060335481146104ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b6000606854905090565b6000606954905090565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff168061051b575061051a610f66565b5b8061053257506000809054906101000a900460ff16155b610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611548602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156105d7576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600160338190555080156106005760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806106225750610621610f66565b5b8061063957506000809054906101000a900460ff16155b61068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611548602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156106de576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60008411610754576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776473616c653a2072617465206973203000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806115ca6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610860576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806115036024913960400191505060405180910390fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561090a5760008060016101000a81548160ff0219169083151502179055505b50505050565b6000610b1061091d610d14565b73ffffffffffffffffffffffffffffffffffffffff166370a08231609c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109bb57600080fd5b505afa1580156109cf573d6000803e3d6000fd5b505050506040513d60208110156109e557600080fd5b81019080805190602001909291905050506109fe610d14565b73ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e609c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610ad057600080fd5b505afa158015610ae4573d6000803e3d6000fd5b505050506040513d6020811015610afa57600080fd5b8101908080519060200190929190505050610f77565b905090565b6000609c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff1680610b5e5750610b5d610f66565b5b80610b7557506000809054906101000a900460ff16155b610bca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611548602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610c1a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610c22610f90565b610c2857fe5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806114cf6034913960400191505060405180910390fd5b81609c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610d105760008060016101000a81548160ff0219169083151502179055505b5050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611576602a913960400191505060405180910390fd5b6000811415610e3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b5050565b6000610e566068548361105290919063ffffffff16565b9050919050565b600080828401905083811015610edb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610eef82826110d8565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f5f573d6000803e3d6000fd5b50565b5050565b600080303b90506000811491505090565b6000818310610f865781610f88565b825b905092915050565b600080606854118015610ff25750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b801561104d5750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b60008083141561106557600090506110d2565b600082840290508284828161107657fe5b04146110cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806115276021913960400191505060405180910390fd5b809150505b92915050565b61112e609c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168383611108610d14565b73ffffffffffffffffffffffffffffffffffffffff16611132909392919063ffffffff16565b5050565b611232848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611238565b50505050565b6112578273ffffffffffffffffffffffffffffffffffffffff16611483565b6112c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061131857805182526020820191506020810190506020830392506112f5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461137a576040519150601f19603f3d011682016040523d82523d6000602084013e61137f565b606091505b5091509150816113f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b60008151111561147d5780806020019051602081101561141657600080fd5b810190808051906020019092919050505061147c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806115a0602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156114c55750808214155b9250505091905056fe416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c657420697320746865207a65726f206164647265737343726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656443726f776473616c653a2062656e656669636961727920697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656443726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373a165627a7a72305820113ec386e2aee77ea9f8db596041b9bbaddd1848f538011338dae983c754af430029",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063bf58390311610059578063bf583903146101e2578063bff99c6c1461020d578063c4d66de814610264578063ec8ac4d8146102b5578063fc0c546a146102f957610091565b80632c4e722e146100a35780634042b66f146100ce578063521eb273146100f95780638129fc1c14610150578063b4988fd014610167575b6100a161009c610350565b610358565b005b3480156100af57600080fd5b506100b86104be565b6040518082815260200191505060405180910390f35b3480156100da57600080fd5b506100e36104c8565b6040518082815260200191505060405180910390f35b34801561010557600080fd5b5061010e6104d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015c57600080fd5b506101656104fc565b005b34801561017357600080fd5b506101e06004803603606081101561018a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b005b3480156101ee57600080fd5b506101f7610910565b6040518082815260200191505060405180910390f35b34801561021957600080fd5b50610222610b15565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027057600080fd5b506102b36004803603602081101561028757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b3f565b005b6102f7600480360360208110156102cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610358565b005b34801561030557600080fd5b5061030e610d14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b600160336000828254019250508190555060006033549050600034905061037f8382610d3e565b600061038a82610e3f565b90506103a182606954610e5d90919063ffffffff16565b6069819055506103b18482610ee5565b8373ffffffffffffffffffffffffffffffffffffffff166103d0610350565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361042f8483610ef3565b610437610ef7565b6104418483610f62565b505060335481146104ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b6000606854905090565b6000606954905090565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff168061051b575061051a610f66565b5b8061053257506000809054906101000a900460ff16155b610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611548602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156105d7576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600160338190555080156106005760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806106225750610621610f66565b5b8061063957506000809054906101000a900460ff16155b61068e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611548602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156106de576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60008411610754576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776473616c653a2072617465206973203000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806115ca6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610860576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806115036024913960400191505060405180910390fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561090a5760008060016101000a81548160ff0219169083151502179055505b50505050565b6000610b1061091d610d14565b73ffffffffffffffffffffffffffffffffffffffff166370a08231609c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109bb57600080fd5b505afa1580156109cf573d6000803e3d6000fd5b505050506040513d60208110156109e557600080fd5b81019080805190602001909291905050506109fe610d14565b73ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e609c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610ad057600080fd5b505afa158015610ae4573d6000803e3d6000fd5b505050506040513d6020811015610afa57600080fd5b8101908080519060200190929190505050610f77565b905090565b6000609c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff1680610b5e5750610b5d610f66565b5b80610b7557506000809054906101000a900460ff16155b610bca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611548602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610c1a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610c22610f90565b610c2857fe5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806114cf6034913960400191505060405180910390fd5b81609c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610d105760008060016101000a81548160ff0219169083151502179055505b5050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611576602a913960400191505060405180910390fd5b6000811415610e3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b5050565b6000610e566068548361105290919063ffffffff16565b9050919050565b600080828401905083811015610edb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610eef82826110d8565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f5f573d6000803e3d6000fd5b50565b5050565b600080303b90506000811491505090565b6000818310610f865781610f88565b825b905092915050565b600080606854118015610ff25750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b801561104d5750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b60008083141561106557600090506110d2565b600082840290508284828161107657fe5b04146110cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806115276021913960400191505060405180910390fd5b809150505b92915050565b61112e609c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168383611108610d14565b73ffffffffffffffffffffffffffffffffffffffff16611132909392919063ffffffff16565b5050565b611232848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611238565b50505050565b6112578273ffffffffffffffffffffffffffffffffffffffff16611483565b6112c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061131857805182526020820191506020810190506020830392506112f5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461137a576040519150601f19603f3d011682016040523d82523d6000602084013e61137f565b606091505b5091509150816113f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b60008151111561147d5780806020019051602081101561141657600080fd5b810190808051906020019092919050505061147c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806115a0602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b82141580156114c55750808214155b9250505091905056fe416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c657420697320746865207a65726f206164647265737343726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656443726f776473616c653a2062656e656669636961727920697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656443726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373a165627a7a72305820113ec386e2aee77ea9f8db596041b9bbaddd1848f538011338dae983c754af430029",
  "sourceMap": "408:1458:18:-;;;;;;;;;",
  "deployedSourceMap": "408:1458:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3113:23:13;3123:12;:10;:12::i;:::-;3113:9;:23::i;:::-;408:1458:18;3526:75:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3526:75:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3664:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3664:85:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3354:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3354:87:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;769:214:158;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:158;;;:::i;:::-;;2396:389:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2396:389:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2396:389:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1311:170:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1311:170:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1083:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1083:89:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;740:253;;8:9:-1;5:2;;;30:1;27;20:12;5:2;740:253:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;740:253:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;4006:605:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4006:605:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;3202:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3202:76:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;867:96:0;912:15;946:10;939:17;;867:96;:::o;4006:605:13:-;1409:1:158;1392:13;;:18;;;;;;;;;;;1420:20;1443:13;;1420:36;;4084:17:13;4104:9;4084:29;;4123:44;4144:11;4157:9;4123:20;:44::i;:::-;4226:14;4243:26;4259:9;4243:15;:26::i;:::-;4226:43;;4317:25;4332:9;4317:10;;:14;;:25;;;;:::i;:::-;4304:10;:38;;;;4353:37;4370:11;4383:6;4353:16;:37::i;:::-;4435:11;4405:61;;4421:12;:10;:12::i;:::-;4405:61;;;4448:9;4459:6;4405:61;;;;;;;;;;;;;;;;;;;;;;;;4477:46;4500:11;4513:9;4477:22;:46::i;:::-;4534:15;:13;:15::i;:::-;4559:45;4581:11;4594:9;4559:21;:45::i;:::-;1466:1:158;;1501:13;;1485:12;:29;1477:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4006:605:13;;:::o;3526:75::-;3563:7;3589:5;;3582:12;;3526:75;:::o;3664:85::-;3706:7;3732:10;;3725:17;;3664:85;:::o;3354:87::-;3393:15;3427:7;;;;;;;;;;;3420:14;;3354:87;:::o;769:214:158:-;1024:12:159;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;975:1:158;959:13;:17;;;;1268:14:159;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;769:214:158;:::o;2396:389:13:-;1024:12:159;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2512:1:13;2505:4;:8;2497:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:1;2556:20;;:6;:20;;;;2548:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2662:1;2636:28;;2644:5;2636:28;;;;2628:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2724:4;2716:5;:12;;;;2748:6;2738:7;;:16;;;;;;;;;;;;;;;;;;2773:5;2764:6;;:14;;;;;;;;;;;;;;;;;;1268::159;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2396:389:13;;;;:::o;1311:170:18:-;1359:7;1385:89;1394:7;:5;:7::i;:::-;:17;;;1412:12;;;;;;;;;;;1394:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1394:31:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1394:31:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1394:31:18;;;;;;;;;;;;;;;;1427:7;:5;:7::i;:::-;:17;;;1445:12;;;;;;;;;;;1467:4;1427:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1427:46:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1427:46:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1427:46:18;;;;;;;;;;;;;;;;1385:8;:89::i;:::-;1378:96;;1311:170;:::o;1083:89::-;1127:7;1153:12;;;;;;;;;;;1146:19;;1083:89;:::o;740:253::-;1024:12:159;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;817:31:18;:29;:31::i;:::-;810:39;;;;891:1;868:25;;:11;:25;;;;860:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;975:11;960:12;;:26;;;;;;;;;;;;;;;;;;1268:14:159;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;740:253:18;;:::o;3202:76:13:-;3240:6;3265;;;;;;;;;;;3258:13;;3202:76;:::o;5318:376::-;5443:1;5420:25;;:11;:25;;;;5412:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5523:1;5510:9;:14;;5502:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5318:376;;:::o;7619:120::-;7686:7;7712:20;7726:5;;7712:9;:13;;:20;;;;:::i;:::-;7705:27;;7619:120;;;:::o;834:176:45:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6821:134:13:-;6908:40;6923:11;6936;6908:14;:40::i;:::-;6821:134;;:::o;7225:145::-;;;:::o;7826:78::-;7870:7;;;;;;;;;;;:16;;:27;7887:9;7870:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7870:27:13;7826:78::o;5989:149::-;;;:::o;1409:467:159:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;358:104:44:-;416:7;446:1;442;:5;:13;;454:1;442:13;;;450:1;442:13;435:20;;358:104;;;;:::o;4617:159:13:-;4671:4;4704:1;4696:5;;:9;4695:38;;;;;4730:1;4711:21;;:7;;;;;;;;;;;:21;;;;4695:38;:73;;;;;4765:1;4738:29;;4746:6;;;;;;;;;;;4738:29;;;;4695:73;4687:82;;4617:159;:::o;2159:459:45:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;1672:156:18:-;1757:64;1782:12;;;;;;;;;;;1796:11;1809;1757:7;:5;:7::i;:::-;:24;;;;:64;;;;;;:::i;:::-;1672:156;;:::o;842:202:134:-;942:95;961:5;991;:18;;;:27;;;;1020:4;1026:2;1030:5;968:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;968:68:134;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;968:68:134;942:18;:95::i;:::-;842:202;;;;:::o;2666:1095::-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:134;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:134;;;;3479:7;3471:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:1;3538:10;:17;:21;3534:221;;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3667:30:134;;;;;;;;;;;;;;;;3659:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:221;2666:1095;;;;:::o;557:797:156:-;617:4;1062:16;1088:19;1110:66;1088:88;;;;1277:7;1265:20;1253:32;;1316:3;1304:15;;:8;:15;;:42;;;;;1335:11;1323:8;:23;;1304:42;1296:51;;;;557:797;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"../Crowdsale.sol\";\nimport \"../../token/ERC20/IERC20.sol\";\nimport \"../../token/ERC20/SafeERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../math/Math.sol\";\n\n/**\n * @title AllowanceCrowdsale\n * @dev Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.\n */\ncontract AllowanceCrowdsale is Initializable, Crowdsale {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    address private _tokenWallet;\n\n    /**\n     * @dev Constructor, takes token wallet address.\n     * @param tokenWallet Address holding the tokens, which has approved allowance to the crowdsale.\n     */\n    function initialize(address tokenWallet) public initializer {\n        assert(Crowdsale._hasBeenInitialized());\n\n        require(tokenWallet != address(0), \"AllowanceCrowdsale: token wallet is the zero address\");\n        _tokenWallet = tokenWallet;\n    }\n\n    /**\n     * @return the address of the wallet that will hold the tokens.\n     */\n    function tokenWallet() public view returns (address) {\n        return _tokenWallet;\n    }\n\n    /**\n     * @dev Checks the amount of tokens left in the allowance.\n     * @return Amount of tokens left in the allowance\n     */\n    function remainingTokens() public view returns (uint256) {\n        return Math.min(token().balanceOf(_tokenWallet), token().allowance(_tokenWallet, address(this)));\n    }\n\n    /**\n     * @dev Overrides parent behavior by transferring tokens from wallet.\n     * @param beneficiary Token purchaser\n     * @param tokenAmount Amount of tokens purchased\n     */\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal {\n        token().safeTransferFrom(_tokenWallet, beneficiary, tokenAmount);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/emission/AllowanceCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/emission/AllowanceCrowdsale.sol",
    "exportedSymbols": {
      "AllowanceCrowdsale": [
        2872
      ]
    },
    "id": 2873,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2775,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:18"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 2776,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 15207,
        "src": "25:60:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 2777,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 2337,
        "src": "86:26:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "../../token/ERC20/IERC20.sol",
        "id": 2778,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 11395,
        "src": "113:38:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/SafeERC20.sol",
        "file": "../../token/ERC20/SafeERC20.sol",
        "id": 2779,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 11615,
        "src": "152:41:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 2780,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 5860,
        "src": "194:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/math/Math.sol",
        "file": "../../math/Math.sol",
        "id": 2781,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 5673,
        "src": "228:29:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2782,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15206,
              "src": "439:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$15206",
                "typeString": "contract Initializable"
              }
            },
            "id": 2783,
            "nodeType": "InheritanceSpecifier",
            "src": "439:13:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2784,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2336,
              "src": "454:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2336",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 2785,
            "nodeType": "InheritanceSpecifier",
            "src": "454:9:18"
          }
        ],
        "contractDependencies": [
          29,
          2336,
          15143,
          15206
        ],
        "contractKind": "contract",
        "documentation": "@title AllowanceCrowdsale\n@dev Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.",
        "fullyImplemented": true,
        "id": 2872,
        "linearizedBaseContracts": [
          2872,
          2336,
          15143,
          29,
          15206
        ],
        "name": "AllowanceCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2788,
            "libraryName": {
              "contractScope": null,
              "id": 2786,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5859,
              "src": "476:8:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5859",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "470:27:18",
            "typeName": {
              "id": 2787,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2791,
            "libraryName": {
              "contractScope": null,
              "id": 2789,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11614,
              "src": "508:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$11614",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "502:27:18",
            "typeName": {
              "contractScope": null,
              "id": 2790,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11394,
              "src": "522:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$11394",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 2793,
            "name": "_tokenWallet",
            "nodeType": "VariableDeclaration",
            "scope": 2872,
            "src": "535:28:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2792,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "535:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2819,
              "nodeType": "Block",
              "src": "800:193:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2801,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "817:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2336_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 2802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2237,
                          "src": "817:29:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "817:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2800,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15210,
                      "src": "810:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "810:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2805,
                  "nodeType": "ExpressionStatement",
                  "src": "810:39:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2807,
                          "name": "tokenWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2795,
                          "src": "868:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "891:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "883:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "883:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "868:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c657420697320746865207a65726f2061646472657373",
                        "id": 2812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "895:54:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
                          "typeString": "literal_string \"AllowanceCrowdsale: token wallet is the zero address\""
                        },
                        "value": "AllowanceCrowdsale: token wallet is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
                          "typeString": "literal_string \"AllowanceCrowdsale: token wallet is the zero address\""
                        }
                      ],
                      "id": 2806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15224,
                        15225
                      ],
                      "referencedDeclaration": 15225,
                      "src": "860:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "860:90:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2814,
                  "nodeType": "ExpressionStatement",
                  "src": "860:90:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2815,
                      "name": "_tokenWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2793,
                      "src": "960:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2816,
                      "name": "tokenWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2795,
                      "src": "975:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "960:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "960:26:18"
                }
              ]
            },
            "documentation": "@dev Constructor, takes token wallet address.\n@param tokenWallet Address holding the tokens, which has approved allowance to the crowdsale.",
            "id": 2820,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2798,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2797,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15187,
                  "src": "788:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "788:11:18"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2795,
                  "name": "tokenWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "760:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "759:21:18"
            },
            "returnParameters": {
              "id": 2799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:18"
            },
            "scope": 2872,
            "src": "740:253:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2827,
              "nodeType": "Block",
              "src": "1136:36:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2825,
                    "name": "_tokenWallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2793,
                    "src": "1153:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2824,
                  "id": 2826,
                  "nodeType": "Return",
                  "src": "1146:19:18"
                }
              ]
            },
            "documentation": "@return the address of the wallet that will hold the tokens.",
            "id": 2828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenWallet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:2:18"
            },
            "returnParameters": {
              "id": 2824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "1127:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:9:18"
            },
            "scope": 2872,
            "src": "1083:89:18",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2850,
              "nodeType": "Block",
              "src": "1368:113:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2838,
                            "name": "_tokenWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2793,
                            "src": "1412:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2835,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2128,
                              "src": "1394:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$11394_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 2836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1394:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11394",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11339,
                          "src": "1394:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1394:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2843,
                            "name": "_tokenWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2793,
                            "src": "1445:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2845,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15305,
                                "src": "1467:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AllowanceCrowdsale_$2872",
                                  "typeString": "contract AllowanceCrowdsale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AllowanceCrowdsale_$2872",
                                  "typeString": "contract AllowanceCrowdsale"
                                }
                              ],
                              "id": 2844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1459:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1459:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2840,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2128,
                              "src": "1427:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$11394_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 2841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1427:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11394",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11357,
                          "src": "1427:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 2847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1427:46:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2833,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5672,
                        "src": "1385:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$5672_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 2834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5639,
                      "src": "1385:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:89:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2832,
                  "id": 2849,
                  "nodeType": "Return",
                  "src": "1378:96:18"
                }
              ]
            },
            "documentation": "@dev Checks the amount of tokens left in the allowance.\n@return Amount of tokens left in the allowance",
            "id": 2851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remainingTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:2:18"
            },
            "returnParameters": {
              "id": 2832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2831,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2851,
                  "src": "1359:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1358:9:18"
            },
            "scope": 2872,
            "src": "1311:170:18",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2866,
              "nodeType": "Block",
              "src": "1747:81:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2861,
                        "name": "_tokenWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2793,
                        "src": "1782:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2862,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "1796:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2863,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2855,
                        "src": "1809:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2858,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2128,
                          "src": "1757:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$11394_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 2859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1757:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11394",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11452,
                      "src": "1757:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11394_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11394_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1757:64:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2865,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:64:18"
                }
              ]
            },
            "documentation": "@dev Overrides parent behavior by transferring tokens from wallet.\n@param beneficiary Token purchaser\n@param tokenAmount Amount of tokens purchased",
            "id": 2867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2853,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "1696:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "1717:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:42:18"
            },
            "returnParameters": {
              "id": 2857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1747:0:18"
            },
            "scope": 2872,
            "src": "1672:156:18",
            "stateMutability": "nonpayable",
            "superFunction": 2286,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2871,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2872,
            "src": "1834:29:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2868,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1834:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2870,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2869,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1842:2:18",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1834:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2873,
        "src": "408:1458:18"
      }
    ],
    "src": "0:1867:18"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/emission/AllowanceCrowdsale.sol",
    "exportedSymbols": {
      "AllowanceCrowdsale": [
        2872
      ]
    },
    "id": 2873,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2775,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:18"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 2776,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 15207,
        "src": "25:60:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 2777,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 2337,
        "src": "86:26:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "../../token/ERC20/IERC20.sol",
        "id": 2778,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 11395,
        "src": "113:38:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC20/SafeERC20.sol",
        "file": "../../token/ERC20/SafeERC20.sol",
        "id": 2779,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 11615,
        "src": "152:41:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 2780,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 5860,
        "src": "194:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/math/Math.sol",
        "file": "../../math/Math.sol",
        "id": 2781,
        "nodeType": "ImportDirective",
        "scope": 2873,
        "sourceUnit": 5673,
        "src": "228:29:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2782,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15206,
              "src": "439:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$15206",
                "typeString": "contract Initializable"
              }
            },
            "id": 2783,
            "nodeType": "InheritanceSpecifier",
            "src": "439:13:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2784,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2336,
              "src": "454:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2336",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 2785,
            "nodeType": "InheritanceSpecifier",
            "src": "454:9:18"
          }
        ],
        "contractDependencies": [
          29,
          2336,
          15143,
          15206
        ],
        "contractKind": "contract",
        "documentation": "@title AllowanceCrowdsale\n@dev Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.",
        "fullyImplemented": true,
        "id": 2872,
        "linearizedBaseContracts": [
          2872,
          2336,
          15143,
          29,
          15206
        ],
        "name": "AllowanceCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2788,
            "libraryName": {
              "contractScope": null,
              "id": 2786,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5859,
              "src": "476:8:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5859",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "470:27:18",
            "typeName": {
              "id": 2787,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2791,
            "libraryName": {
              "contractScope": null,
              "id": 2789,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11614,
              "src": "508:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$11614",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "502:27:18",
            "typeName": {
              "contractScope": null,
              "id": 2790,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11394,
              "src": "522:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$11394",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 2793,
            "name": "_tokenWallet",
            "nodeType": "VariableDeclaration",
            "scope": 2872,
            "src": "535:28:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2792,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "535:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2819,
              "nodeType": "Block",
              "src": "800:193:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2801,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "817:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2336_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 2802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2237,
                          "src": "817:29:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "817:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2800,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15210,
                      "src": "810:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "810:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2805,
                  "nodeType": "ExpressionStatement",
                  "src": "810:39:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2807,
                          "name": "tokenWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2795,
                          "src": "868:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "891:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "883:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "883:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "868:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c657420697320746865207a65726f2061646472657373",
                        "id": 2812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "895:54:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
                          "typeString": "literal_string \"AllowanceCrowdsale: token wallet is the zero address\""
                        },
                        "value": "AllowanceCrowdsale: token wallet is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c1622b0801c3eb285f8898679329f97ee387a915f45db479efe1790a08620d",
                          "typeString": "literal_string \"AllowanceCrowdsale: token wallet is the zero address\""
                        }
                      ],
                      "id": 2806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15224,
                        15225
                      ],
                      "referencedDeclaration": 15225,
                      "src": "860:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "860:90:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2814,
                  "nodeType": "ExpressionStatement",
                  "src": "860:90:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2815,
                      "name": "_tokenWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2793,
                      "src": "960:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2816,
                      "name": "tokenWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2795,
                      "src": "975:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "960:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "960:26:18"
                }
              ]
            },
            "documentation": "@dev Constructor, takes token wallet address.\n@param tokenWallet Address holding the tokens, which has approved allowance to the crowdsale.",
            "id": 2820,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2798,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2797,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15187,
                  "src": "788:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "788:11:18"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2795,
                  "name": "tokenWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 2820,
                  "src": "760:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "759:21:18"
            },
            "returnParameters": {
              "id": 2799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:18"
            },
            "scope": 2872,
            "src": "740:253:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2827,
              "nodeType": "Block",
              "src": "1136:36:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2825,
                    "name": "_tokenWallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2793,
                    "src": "1153:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2824,
                  "id": 2826,
                  "nodeType": "Return",
                  "src": "1146:19:18"
                }
              ]
            },
            "documentation": "@return the address of the wallet that will hold the tokens.",
            "id": 2828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenWallet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:2:18"
            },
            "returnParameters": {
              "id": 2824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2828,
                  "src": "1127:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:9:18"
            },
            "scope": 2872,
            "src": "1083:89:18",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2850,
              "nodeType": "Block",
              "src": "1368:113:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2838,
                            "name": "_tokenWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2793,
                            "src": "1412:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2835,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2128,
                              "src": "1394:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$11394_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 2836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1394:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11394",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11339,
                          "src": "1394:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1394:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2843,
                            "name": "_tokenWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2793,
                            "src": "1445:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2845,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15305,
                                "src": "1467:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AllowanceCrowdsale_$2872",
                                  "typeString": "contract AllowanceCrowdsale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AllowanceCrowdsale_$2872",
                                  "typeString": "contract AllowanceCrowdsale"
                                }
                              ],
                              "id": 2844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1459:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1459:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2840,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2128,
                              "src": "1427:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$11394_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 2841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1427:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$11394",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11357,
                          "src": "1427:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 2847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1427:46:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2833,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5672,
                        "src": "1385:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$5672_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 2834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5639,
                      "src": "1385:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:89:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2832,
                  "id": 2849,
                  "nodeType": "Return",
                  "src": "1378:96:18"
                }
              ]
            },
            "documentation": "@dev Checks the amount of tokens left in the allowance.\n@return Amount of tokens left in the allowance",
            "id": 2851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remainingTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:2:18"
            },
            "returnParameters": {
              "id": 2832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2831,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2851,
                  "src": "1359:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1358:9:18"
            },
            "scope": 2872,
            "src": "1311:170:18",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2866,
              "nodeType": "Block",
              "src": "1747:81:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2861,
                        "name": "_tokenWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2793,
                        "src": "1782:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2862,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "1796:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2863,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2855,
                        "src": "1809:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2858,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2128,
                          "src": "1757:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$11394_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 2859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1757:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11394",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11452,
                      "src": "1757:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11394_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11394_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1757:64:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2865,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:64:18"
                }
              ]
            },
            "documentation": "@dev Overrides parent behavior by transferring tokens from wallet.\n@param beneficiary Token purchaser\n@param tokenAmount Amount of tokens purchased",
            "id": 2867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2853,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "1696:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "1717:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:42:18"
            },
            "returnParameters": {
              "id": 2857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1747:0:18"
            },
            "scope": 2872,
            "src": "1672:156:18",
            "stateMutability": "nonpayable",
            "superFunction": 2286,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2871,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2872,
            "src": "1834:29:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2868,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1834:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2870,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2869,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1842:2:18",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1834:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2873,
        "src": "408:1458:18"
      }
    ],
    "src": "0:1867:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-15T23:03:30.274Z",
  "devdoc": {
    "details": "Extension of Crowdsale where tokens are held by a wallet, which approves an allowance to the crowdsale.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "initialize(address)": {
        "details": "Constructor, takes token wallet address.",
        "params": {
          "tokenWallet": "Address holding the tokens, which has approved allowance to the crowdsale."
        }
      },
      "initialize(uint256,address,address)": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "remainingTokens()": {
        "details": "Checks the amount of tokens left in the allowance.",
        "return": "Amount of tokens left in the allowance"
      },
      "token()": {
        "return": "the token being sold."
      },
      "tokenWallet()": {
        "return": "the address of the wallet that will hold the tokens."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "AllowanceCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}